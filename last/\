/*************************************************************************
 > File Name: last/main.c
 > Author: Guaji
 > Mail: rdwentao@163.com 
 > Created Time: Mon 29 Jun 2020 01:46:17 AM CST
 ************************************************************************/

#include<stdio.h>
#include<stdlib.h>
#include <string.h>
#include "aes.h"
#define BUFFER_SIZE 1024

int file_EN(char name[],unsigned char K[],unsigned char IV[]){
    char name_enc[1024] = {0};
    memcpy(name_enc,name,strlen(name));
    strcpy(name_enc,".enc");
    FILE *fp = fopen(name,"rb");
    FILE *out = fopen(name_enc,"wb");
    char buf[BUFFER_SIZE]; 
    char res[BUFFER_SIZE]; 
    int len_file, len_block;
    int totalBlock;
    unsigned char key_schedule[60];
    aes_key_setup(K, key_schedule, 256);
    fseek(fp,0,2);//将指针放到文件末尾
    len_file = ftell(fp); //统计文本的数据长度
    rewind(fp); //让指针指向文件开始位置
    printf("文件的总长度len_file:%d\n",len_file);
    totalBlock = len_file % BUFFER_SIZE == 0 ? len_file / BUFFER_SIZE : ((len_file / BUFFER_SIZE) + 1); //除最后一快的总块数
    printf("文件的总块数totalBlock:%d\n",totalBlock);
    for(int i = 1; i <= totalBlock; i++) {
        memset(buf,0,BUFFER_SIZE);
        len_block = fread(buf, 1, BUFFER_SIZE, fp);
        buf[len_block]='\0';
        // aes_encrypt_cbc(buf,BUFFER_SIZE,res,key_schedule,256,IV);
        fwrite(buf,BUFFER_SIZE,1,out);
    }
    printf("%s is ready\n",name_enc );
    return 1;
}
